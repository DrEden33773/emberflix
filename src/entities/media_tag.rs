//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "media_tag")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub media_id: i64,
  #[sea_orm(primary_key, auto_increment = false)]
  pub tag_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::media::Entity",
    from = "Column::MediaId",
    to = "super::media::Column::Id",
    on_update = "Restrict",
    on_delete = "Restrict"
  )]
  Media,
  #[sea_orm(
    belongs_to = "super::tag::Entity",
    from = "Column::TagId",
    to = "super::tag::Column::Id",
    on_update = "Restrict",
    on_delete = "Restrict"
  )]
  Tag,
}

impl Related<super::media::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Media.def()
  }
}

impl Related<super::tag::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Tag.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
