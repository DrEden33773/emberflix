//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "comment_on_comment")]
pub struct Model {
  #[sea_orm(primary_key)]
  pub id: i64,
  pub commenter_id: i64,
  pub commented_id: i64,
  #[sea_orm(column_type = "Text")]
  pub content: String,
  pub review_passed: bool,
  pub requested_at: DateTime,
  pub published_at: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::media::Entity",
    from = "Column::CommentedId",
    to = "super::media::Column::Id",
    on_update = "Cascade",
    on_delete = "Cascade"
  )]
  Media,
  #[sea_orm(
    belongs_to = "super::user::Entity",
    from = "Column::CommenterId",
    to = "super::user::Column::Id",
    on_update = "Cascade",
    on_delete = "Cascade"
  )]
  User,
}

impl Related<super::media::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::Media.def()
  }
}

impl Related<super::user::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::User.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
