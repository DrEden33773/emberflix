//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tag")]
pub struct Model {
  #[sea_orm(primary_key)]
  pub id: i64,
  pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(has_many = "super::media_tag::Entity")]
  MediaTag,
}

impl Related<super::media_tag::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::MediaTag.def()
  }
}

impl Related<super::media::Entity> for Entity {
  fn to() -> RelationDef {
    super::media_tag::Relation::Media.def()
  }
  fn via() -> Option<RelationDef> {
    Some(super::media_tag::Relation::Tag.def().rev())
  }
}

impl ActiveModelBehavior for ActiveModel {}
